import javax.swing.*;
import java.awt.*;
import java.util.Arrays;
import java.util.Calendar;
import java.util.GregorianCalendar;

public class DiaryProgram extends JFrame {

    private JPanel calendarPanel;
    private char[] initialPassword = "password".toCharArray();

    public DiaryProgram() {
        // 기본 프레임 설정
        setTitle("Daily Private");
        setSize(800, 600);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        // 비밀번호 입력 창
        JPasswordField passwordField = new JPasswordField();
        JButton loginButton = new JButton("Login");
        loginButton.addActionListener(e -> handleLogin(passwordField.getPassword()));

        // 전환될 캘린더 화면 초기화
        calendarPanel = new CalendarPanel();

        // 메뉴 바 설정
        JMenuBar menuBar = new JMenuBar();
        JMenu menu = new JMenu("***");
        JMenuItem alarmItem = new JMenuItem("알람 설정");
        JMenuItem searchItem = new JMenuItem("키워드 검색");
        JMenuItem darkModeItem = new JMenuItem("다크 모드 전환");

        alarmItem.addActionListener(e -> setAlarm());
        searchItem.addActionListener(e -> searchByKeyword());
        darkModeItem.addActionListener(e -> switchToDarkMode());

        menu.add(alarmItem);
        menu.add(searchItem);
        menu.add(darkModeItem);
        menuBar.add(menu);

        setJMenuBar(menuBar);

        // 프레임에 컴포넌트 추가
        setLayout(new BorderLayout());
        add(passwordField, BorderLayout.NORTH);
        add(loginButton, BorderLayout.CENTER);
        add(calendarPanel, BorderLayout.SOUTH); // 초기에는 보이지 않음

        // 초기에는 로그인 창만 보이도록 설정
        setVisible(true);
    }

    private class CalendarPanel extends JPanel {
        private GregorianCalendar calendar;

        public CalendarPanel() {
            calendar = new GregorianCalendar();
            setLayout(new BorderLayout());
            updateCalendar();
        }

        private void updateCalendar() {
            int month = calendar.get(Calendar.MONTH);
            int year = calendar.get(Calendar.YEAR);

            String[] monthNames = new String[]{"January", "February", "March", "April", "May", "June",
                    "July", "August", "September", "October", "November", "December"};

            JLabel monthLabel = new JLabel(monthNames[month] + " " + year, JLabel.CENTER);
            add(monthLabel, BorderLayout.NORTH);

            String[] dayNames = new String[]{"Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"};
            JPanel dayPanel = new JPanel(new GridLayout(0, 7));

            for (String day : dayNames) {
                dayPanel.add(new JLabel(day, JLabel.CENTER));
            }

            int startDay = new GregorianCalendar(year, month, 1).get(Calendar.DAY_OF_WEEK) - 1;
            int daysInMonth = calendar.getActualMaximum(Calendar.DAY_OF_MONTH);

            for (int i = 0; i < startDay; i++) {
                dayPanel.add(new JLabel(""));
            }

            for (int i = 1; i <= daysInMonth; i++) {
                JButton dayButton = new JButton(Integer.toString(i));
                dayButton.addActionListener(e -> handleDayClick(Integer.parseInt(((JButton) e.getSource()).getText())));
                dayPanel.add(dayButton);
            }

            add(dayPanel, BorderLayout.CENTER);

            // 다음 달 버튼 추가
            JButton nextMonthButton = new JButton("Next Month");
            nextMonthButton.addActionListener(e -> {
                calendar.add(Calendar.MONTH, 1);
                updateCalendar();
            });
            add(nextMonthButton, BorderLayout.SOUTH);
        }

        private void handleDayClick(int day) {
            // TODO: 날짜 클릭 시의 동작 추가
            JOptionPane.showMessageDialog(this, "Clicked on day " + day);
        }
    }


    private void handleLogin(char[] password) {
        if (Arrays.equals(password, initialPassword)) {
            // TODO: 비밀번호가 일치하는 경우 캘린더 화면을 보이도록 설정
            calendarPanel.setVisible(true);
            revalidate(); // 다시 그리기
            repaint();
        } else {
            // TODO: 비밀번호가 일치하지 않는 경우 처리 (예: 경고 메시지 출력)
            JOptionPane.showMessageDialog(this, "Incorrect password. Please try again.");
        }
    }

    private void setAlarm() {
        // TODO: 알람 설정 기능 구현
    }

    private void searchByKeyword() {
        // TODO: 키워드 검색 기능 구현
    }

    private void switchToDarkMode() {
        // TODO: 다크 모드 전환 기능 구현
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new DiaryProgram());
    }
}
